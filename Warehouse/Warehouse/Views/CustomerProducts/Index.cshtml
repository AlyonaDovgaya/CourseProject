@model Warehouse.Infrastructure.ViewModels.CustomerProducts.IndexViewModel

@{
    ViewData["Title"] = "Index";
    var defaultCustomerProduct = Model.CustomerProducts.FirstOrDefault();
}

<h1 class="display-2">Orders</h1>

<p>
    @if (User.IsInRole(Warehouse.Areas.Identity.Roles.Admin))
    {
        <a class="btn btn-dark" asp-action="Create">CREATE NEW</a>
    }
</p>
<form method="get" class="form-inline">
    <label>Name:</label>
    <input name="selectedCustomerName" value="@Model.FilterViewModel.SelectedCustomerName" class="form-control col-2 m-1" />

    <input type="hidden" name="isFromFilter" value="true" />
    <input type="submit" value="Filter" class="btn btn-outline-dark col-3 m-1" />
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => defaultCustomerProduct.OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultCustomerProduct.DepartureDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultCustomerProduct.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultCustomerProduct.Price)
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sort="@Model.SortViewModel.CustomerNameSort"
                   asp-route-selectedCustomerName="@Model.FilterViewModel.SelectedCustomerName">
                    @Html.DisplayNameFor(model => defaultCustomerProduct.Customer)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultCustomerProduct.Product)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultCustomerProduct.DeliveryMethod)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultCustomerProduct.Employee)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.CustomerProducts)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DepartureDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeliveryMethod.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Employee.Name)
                </td>
                <td>
                    <a class="btn btn-dark" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (User.IsInRole(Warehouse.Areas.Identity.Roles.Admin))
                    {
                        <a class="btn btn-dark" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-dark" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex align-items-center justify-content-center">

    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index"
           asp-route-page="1"
           asp-route-sort="@Model.SortViewModel.Current"
           asp-route-selectedCustomerName="@Model.FilterViewModel.SelectedCustomerName"
           class="btn btn-outline-dark m-1">
            First page
        </a>

        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           asp-route-sort="@Model.SortViewModel.Current"
           asp-route-selectedCustomerName="@Model.FilterViewModel.SelectedCustomerName"
           class="btn btn-outline-dark m-1">
            Previous page
        </a>
    }
    <a class="btn btn-outline-dark m-1">
        @Model.PageViewModel.PageNumber
    </a>
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           asp-route-sort="@Model.SortViewModel.Current"
           asp-route-selectedCustomerName="@Model.FilterViewModel.SelectedCustomerName"
           class="btn btn-outline-dark m-1">
            Next page
        </a>

        <a asp-action="Index"
           asp-route-page="@Model.PageViewModel.TotalPages"
           asp-route-sort="@Model.SortViewModel.Current"
           asp-route-selectedCustomerName="@Model.FilterViewModel.SelectedCustomerName"
           class="btn btn-outline-dark m-1">
            Last page (@Model.PageViewModel.TotalPages)
        </a>
    }
</div>