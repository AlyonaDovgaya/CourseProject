@model Warehouse.Infrastructure.ViewModels.Products.IndexViewModel

@{
    ViewData["Title"] = "Index";
    var defaultProduct = Model.Products.FirstOrDefault();
}

<h1 class="display-2">Products</h1>

<p>
    @if (User.IsInRole(Warehouse.Areas.Identity.Roles.Admin))
    {
        <a class="btn btn-dark" asp-action="Create">CREATE NEW</a>
    }
</p>
<form method="get" class="form-inline">
    <label>Name:</label>
    <input name="selectedName" value="@Model.FilterViewModel.SelectedName" class="form-control col-2 m-1" />

    <label>Min price:</label>
    <input type="number" min="0" name="selectedMinPrice" value="@Model.FilterViewModel.SelectedMinPrice" class="form-control col-1 m-1" />

    <label>Max price:</label>
    <input type="number" min="0" name="selectedMaxPrice" value="@Model.FilterViewModel.SelectedMaxPrice" class="form-control col-1 m-1" />

    <label>Type:</label>
    <select name="selectedTypeId" asp-items="Model.FilterViewModel.Types" class="form-control col-1 m-1"></select>

    <label>Manufacturer:</label>
    <select name="selectedManufacturerId" asp-items="Model.FilterViewModel.Manufacturers" class="form-control col-1 m-1"></select>

    <input type="hidden" name="isFromFilter" value="true" />
    <input type="submit" value="Filter" class="btn btn-outline-dark col-3 m-1" />
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sort="@Model.SortViewModel.NameSort"
                   asp-route-selectedName="@Model.FilterViewModel.SelectedName"
                   asp-route-selectedMinPrice="@Model.FilterViewModel.SelectedMinPrice"
                   asp-route-selectedMaxPrice="@Model.FilterViewModel.SelectedMaxPrice"
                   asp-route-selectedTypeId="@Model.FilterViewModel.SelectedTypeId"
                   asp-route-selectedManufacturerId="@Model.FilterViewModel.SelectedManufacturerId">
                    @Html.DisplayNameFor(model => defaultProduct.Name)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultProduct.StorageConditions)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultProduct.Packaging)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultProduct.ExpiryDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultProduct.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultProduct.Manufacturer)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultProduct.ProductType)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Products)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StorageConditions)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Packaging)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpiryDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Manufacturer.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductType.Name)
                </td>
                <td>
                    <a class="btn btn-dark" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (User.IsInRole(Warehouse.Areas.Identity.Roles.Admin))
                    {
                        <a class="btn btn-dark" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-dark" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex align-items-center justify-content-center">

    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index"
           asp-route-page="1"
           asp-route-sort="@Model.SortViewModel.Current"
           asp-route-selectedName="@Model.FilterViewModel.SelectedName"
           asp-route-selectedMinPrice="@Model.FilterViewModel.SelectedMinPrice"
           asp-route-selectedMaxPrice="@Model.FilterViewModel.SelectedMaxPrice"
           asp-route-selectedTypeId="@Model.FilterViewModel.SelectedTypeId"
           asp-route-selectedManufacturerId="@Model.FilterViewModel.SelectedManufacturerId"
           class="btn btn-outline-dark m-1">
            First page
        </a>

        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           asp-route-sort="@Model.SortViewModel.Current"
           asp-route-selectedName="@Model.FilterViewModel.SelectedName"
           asp-route-selectedMinPrice="@Model.FilterViewModel.SelectedMinPrice"
           asp-route-selectedMaxPrice="@Model.FilterViewModel.SelectedMaxPrice"
           asp-route-selectedTypeId="@Model.FilterViewModel.SelectedTypeId"
           asp-route-selectedManufacturerId="@Model.FilterViewModel.SelectedManufacturerId"
           class="btn btn-outline-dark m-1">
            Previous page
        </a>
    }
    <a class="btn btn-outline-dark m-1">
        @Model.PageViewModel.PageNumber
    </a>
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           asp-route-sort="@Model.SortViewModel.Current"
           asp-route-selectedName="@Model.FilterViewModel.SelectedName"
           asp-route-selectedMinPrice="@Model.FilterViewModel.SelectedMinPrice"
           asp-route-selectedMaxPrice="@Model.FilterViewModel.SelectedMaxPrice"
           asp-route-selectedTypeId="@Model.FilterViewModel.SelectedTypeId"
           asp-route-selectedManufacturerId="@Model.FilterViewModel.SelectedManufacturerId"
           class="btn btn-outline-dark m-1">
            Next page
        </a>

        <a asp-action="Index"
           asp-route-page="@Model.PageViewModel.TotalPages"
           asp-route-sort="@Model.SortViewModel.Current"
           asp-route-selectedName="@Model.FilterViewModel.SelectedName"
           asp-route-selectedMinPrice="@Model.FilterViewModel.SelectedMinPrice"
           asp-route-selectedMaxPrice="@Model.FilterViewModel.SelectedMaxPrice"
           asp-route-selectedTypeId="@Model.FilterViewModel.SelectedTypeId"
           asp-route-selectedManufacturerId="@Model.FilterViewModel.SelectedManufacturerId"
           class="btn btn-outline-dark m-1">
            Last page (@Model.PageViewModel.TotalPages)
        </a>
    }
</div>